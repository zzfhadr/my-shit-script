<p dir="auto">This tutorial will begin with the basic concepts of malware reverse engineering and graduate to an entry-level basic examination of Assembly Language.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-2-x86-course-part-2-techniques" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-2-x86-course-part-2-techniques"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 2: x86 Course (Part 2: Techniques)</h2>
<p dir="auto">This tutorial will address the two basic techniques that you can employ when analyzing malware. The first being static analysis and the other being dynamic analysis.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-1/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-3-x86-course-part-3-types-of-malware" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-3-x86-course-part-3-types-of-malware"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 3: x86 Course (Part 3: Types Of Malware)</h2>
<p dir="auto">This tutorial will address the basic forms of malware and how they work in simple terms.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-2/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-4-x86-course-part-4-x86-assembly-intro" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-4-x86-course-part-4-x86-assembly-intro"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 4: x86 Course (Part 4: x86 Assembly Intro)</h2>
<p dir="auto">This tutorial will address x86 Assembly Languages and their usage to produce object code for the aforementioned series of processors.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-3/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-5-x86-course-part-5-binary-number-system" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-5-x86-course-part-5-binary-number-system"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 5: x86 Course (Part 5: Binary Number System)</h2>
<p dir="auto">This tutorial will address the very basics of the binary number system.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-4/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-6-x86-course-part-6-hexadecimal-number-system" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-6-x86-course-part-6-hexadecimal-number-system"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 6: x86 Course (Part 6: Hexadecimal Number System)</h2>
<p dir="auto">This tutorial will address the very basics of the hexadecimal number system.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-5/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-7-x86-course-part-7-transistors-and-memory" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-7-x86-course-part-7-transistors-and-memory"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 7: x86 Course (Part 7: Transistors And Memory)</h2>
<p dir="auto">This tutorial will address the basics of transistors and memory.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-8-x86-course-part-8---bytes-words-double-words-etc" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-8-x86-course-part-8---bytes-words-double-words-etc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 8: x86 Course (Part 8 - Bytes, Words, Double Words, etc...)</h2>
<p dir="auto">This tutorial will address the basics of memory and examine our first GDB debugger instance and examine our first real look into our computers memory and instructions.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-7/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-9-x86-course-part-9-x86-basic-architecture" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-9-x86-course-part-9-x86-basic-architecture"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 9: x86 Course (Part 9: x86 Basic Architecture)</h2>
<p dir="auto">This tutorial will address the basic architecture of an x86 processor.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-8/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-10-x86-course-part-10-general-purpose-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-10-x86-course-part-10-general-purpose-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 10: x86 Course (Part 10: General-purpose Registers)</h2>
<p dir="auto">This tutorial will address the general purpose x86 registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-9/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-11-x86-course-part-11-segment-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-11-x86-course-part-11-segment-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 11: x86 Course (Part 11: Segment Registers)</h2>
<p dir="auto">This tutorial will address the x86 segment registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-10/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-12-x86-course-part-12-instruction-pointer-register" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-12-x86-course-part-12-instruction-pointer-register"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 12: x86 Course (Part 12: Instruction Pointer Register)</h2>
<p dir="auto">This tutorial will address the x86 instruction pointer register.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-11/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-13-x86-course-part-13-control-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-13-x86-course-part-13-control-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 13: x86 Course (Part 13: Control Registers)</h2>
<p dir="auto">This tutorial will address the x86 control registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-12/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-14-x86-course-part-14-flags" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-14-x86-course-part-14-flags"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 14: x86 Course (Part 14: Flags)</h2>
<p dir="auto">This tutorial will address the status, control and systems flags.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-13/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-15-x86-course-part-15-stack" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-15-x86-course-part-15-stack"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 15: x86 Course (Part 15: Stack)</h2>
<p dir="auto">This tutorial will address the stack.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-14/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-16-x86-course-part-16-heap" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-16-x86-course-part-16-heap"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 16: x86 Course (Part 16: Heap)</h2>
<p dir="auto">This tutorial will address the heap.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-15/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-17-x86-course-part-17--how-to-install-linux" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-17-x86-course-part-17--how-to-install-linux"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 17: x86 Course (Part 17 – How To Install Linux)</h2>
<p dir="auto">This tutorial will address how to install Ubuntu Linux on both Windows and MAC.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-16/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-18-x86-course-part-18---vim-text-editor" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-18-x86-course-part-18---vim-text-editor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 18: x86 Course (Part 18 - vim Text Editor)</h2>
<p dir="auto">This tutorial will address how to install the vim text editor.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-17/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-19-x86-course-part-19---why-learn-assembly" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-19-x86-course-part-19---why-learn-assembly"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 19: x86 Course (Part 19 - Why Learn Assembly)</h2>
<p dir="auto">This tutorial will address the age old question of why to bother understanding the basics of Assembly Language.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-18/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-20-x86-course-part-20---instruction-code-handling" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-20-x86-course-part-20---instruction-code-handling"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 20: x86 Course (Part 20 - Instruction Code Handling)</h2>
<p dir="auto">This tutorial will address op codes and instruction code handling.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-19/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-21-x86-course-part-21---how-to-compile-a-program" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-21-x86-course-part-21---how-to-compile-a-program"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 21: x86 Course (Part 21 - How To Compile A Program)</h2>
<p dir="auto">This tutorial will address how to compile a basic x86 Assembly Program.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6174148486322233344/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-22-x86-course-part-22---asm-program-1-moving-immediate-data" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-22-x86-course-part-22---asm-program-1-moving-immediate-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 22: x86 Course (Part 22 - ASM Program 1 [Moving Immediate Data])</h2>
<p dir="auto">This tutorial will address how to create our first real Assembly Program by moving immediate data.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6176700362704056320/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-23-x86-course-part-23---asm-debugging-1-moving-immediate-data" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-23-x86-course-part-23---asm-debugging-1-moving-immediate-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 23: x86 Course (Part 23 - ASM Debugging 1 [Moving Immediate Data])</h2>
<p dir="auto">This tutorial will address how to debug our first real Assembly Program by moving immediate data.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6179235028048834560/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-24-x86-course-part-24---asm-hacking-1-moving-immediate-data" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-24-x86-course-part-24---asm-hacking-1-moving-immediate-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 24: x86 Course (Part 24 - ASM Hacking 1 [Moving Immediate Data])</h2>
<p dir="auto">This tutorial will address how to hack our first real Assembly Program by moving immediate data.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6181749648739282944/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-25-x86-course-part-25---asm-program-2-moving-data-between-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-25-x86-course-part-25---asm-program-2-moving-data-between-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 25: x86 Course (Part 25 - ASM Program 2 [Moving Data Between Registers])</h2>
<p dir="auto">This tutorial will address how to create our second real Assembly Program by moving between registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6184290421015871488/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-26-x86-course-part-26---asm-debugging-2-moving-data-between-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-26-x86-course-part-26---asm-debugging-2-moving-data-between-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 26: x86 Course (Part 26 - ASM Debugging 2 [Moving Data Between Registers])</h2>
<p dir="auto">This tutorial will address how to debug our second real Assembly Program by moving between registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6186852494581198848/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-27-x86-course-part-27---asm-hacking-2-moving-data-between-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-27-x86-course-part-27---asm-hacking-2-moving-data-between-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 27: x86 Course (Part 27 - ASM Hacking 2 [Moving Data Between Registers])</h2>
<p dir="auto">This tutorial will address how to hack our second real Assembly Program by moving between registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6189381915728973824/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-28-x86-course-part-28---asm-program-3-moving-data-between-memory-and-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-28-x86-course-part-28---asm-program-3-moving-data-between-memory-and-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 28: x86 Course (Part 28 - ASM Program 3 [Moving Data Between Memory And Registers])</h2>
<p dir="auto">This tutorial will address how to create our third real Assembly Program by moving between memory and registers</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6191923581476184064/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-29-x86-course-part-29---asm-debugging-3-moving-data-between-memory-and-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-29-x86-course-part-29---asm-debugging-3-moving-data-between-memory-and-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 29: x86 Course (Part 29 - ASM Debugging 3 [Moving Data Between Memory And Registers])</h2>
<p dir="auto">This tutorial will address how to debug our third real Assembly Program by moving between memory and registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6194452403807363072/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-30-x86-course-part-30---asm-hacking-3-moving-data-between-memory-and-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-30-x86-course-part-30---asm-hacking-3-moving-data-between-memory-and-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 30: x86 Course (Part 30 - ASM Hacking 3 [Moving Data Between Memory And Registers])</h2>
<p dir="auto">This tutorial will address how to hack our third real Assembly Program by moving between memory and registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6196977244754186240/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-31-x86-course-part-31---asm-program-4-moving-data-between-registers-and-memory" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-31-x86-course-part-31---asm-program-4-moving-data-between-registers-and-memory"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 31: x86 Course (Part 31 - ASM Program 4 [Moving Data Between Registers And Memory])</h2>
<p dir="auto">This tutorial will address how to create our fourth real Assembly Program by moving between registers and memory.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6199521459321217024/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-32-x86-course-part-32---asm-debugging-4-moving-data-between-registers-and-memory" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-32-x86-course-part-32---asm-debugging-4-moving-data-between-registers-and-memory"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 32: x86 Course (Part 32 - ASM Debugging 4 [Moving Data Between Registers And Memory])</h2>
<p dir="auto">This tutorial will address how to debug our fourth real Assembly Program by moving between registers and memory.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6202084078657769472/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-33-x86-course-part-33---asm-hacking-4-moving-data-between-registers-and-memory" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-33-x86-course-part-33---asm-hacking-4-moving-data-between-registers-and-memory"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 33: x86 Course (Part 33 - ASM Hacking 4 [Moving Data Between Registers And Memory])</h2>
<p dir="auto">This tutorial will address how to hack our fourth real Assembly Program by moving between registers and memory.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6204613196200845313/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-34-x86-course-part-34---asm-program-5-indirect-addressing-with-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-34-x86-course-part-34---asm-program-5-indirect-addressing-with-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 34: x86 Course (Part 34 - ASM Program 5 [Indirect Addressing With Registers])</h2>
<p dir="auto">This tutorial will address how to create our fifth real Assembly Program by indirect addressing with registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6207141090722619392/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-35-x86-course-part-35---asm-debugging-5-indirect-addressing-with-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-35-x86-course-part-35---asm-debugging-5-indirect-addressing-with-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 35: x86 Course (Part 35 - ASM Debugging 5 [Indirect Addressing With Registers])</h2>
<p dir="auto">This tutorial will address how to debug our fifth real Assembly Program by indirect addressing with registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6209671278844997632/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-36-x86-course-part-36---asm-hacking-5-indirect-addressing-with-registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-36-x86-course-part-36---asm-hacking-5-indirect-addressing-with-registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 36: x86 Course (Part 36 - ASM Hacking 5 [Indirect Addressing With Registers])</h2>
<p dir="auto">This tutorial will address how to hack our fifth real Assembly Program by indirect addressing with registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6212225805402009600/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-37-x86-course-part-37---asm-program-6-cmov-instructions" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-37-x86-course-part-37---asm-program-6-cmov-instructions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 37: x86 Course (Part 37 - ASM Program 6 [CMOV Instructions])</h2>
<p dir="auto">This tutorial will address how to hack our sixth real Assembly Program with CMOV instructions.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6214770773354123264/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-38-x86-course-part-38---asm-debugging-6-cmov-instructions" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-38-x86-course-part-38---asm-debugging-6-cmov-instructions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 38: x86 Course (Part 38 - ASM Debugging 6 [CMOV Instructions])</h2>
<p dir="auto">This tutorial will address how to debug our sixth real Assembly Program with CMOV instructions.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6216651661075582976/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-39-x86-course-part-39---asm-hacking-6-cmov-instructions" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-39-x86-course-part-39---asm-hacking-6-cmov-instructions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 39: x86 Course (Part 39 - ASM Hacking 6 [CMOV Instructions])</h2>
<p dir="auto">This tutorial will address how to hack our sixth real Assembly Program with CMOV instructions.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6219938772826492928/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-40-x86-course-part-40---conclusion" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-40-x86-course-part-40---conclusion"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 40: x86 Course (Part 40 - Conclusion)</h2>
<p dir="auto">This tutorial will conclude this x86 tutorial.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-6222371031936434176/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<br>
<h2 tabindex="-1" dir="auto"><a id="user-content-arm-32-course-1" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#arm-32-course-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ARM-32 Course 1</h2>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-41-arm-32-course-1-part-1--the-meaning-of-life" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-41-arm-32-course-1-part-1--the-meaning-of-life"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 41: ARM-32 Course 1 (Part 1 – The Meaning Of Life)</h2>
<p dir="auto">This tutorial will introduce our ARM-32 Course 1 tutorial series.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-1-meaning-life-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-42-arm-32-course-1-part-2---number-systems" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-42-arm-32-course-1-part-2---number-systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 42: ARM-32 Course 1 (Part 2 - Number Systems)</h2>
<p dir="auto">This tutorial will discuss number systems such as binary, decimal and hexadecimal in detail.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-2-number-systems-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-43-arm-32-course-1-part-3---binary-addition" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-43-arm-32-course-1-part-3---binary-addition"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 43: ARM-32 Course 1 (Part 3 - Binary Addition)</h2>
<p dir="auto">This tutorial will discuss binary addition.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-3-binary-addition-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-44-arm-32-course-1-part-4---binary-subtraction" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-44-arm-32-course-1-part-4---binary-subtraction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 44: ARM-32 Course 1 (Part 4 - Binary Subtraction)</h2>
<p dir="auto">This tutorial will discuss binary subtraction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-4-binary-subtraction-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-45-arm-32-course-1-part-5---word-lengths" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-45-arm-32-course-1-part-5---word-lengths"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 45: ARM-32 Course 1 (Part 5 - Word Lengths)</h2>
<p dir="auto">This tutorial will discuss word lengths.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-5-word-lengths-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-46-arm-32-course-1-part-6---registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-46-arm-32-course-1-part-6---registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 46: ARM-32 Course 1 (Part 6 - Registers)</h2>
<p dir="auto">This tutorial will discuss registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-6-registers-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-47-arm-32-course-1-part-7---program-counter" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-47-arm-32-course-1-part-7---program-counter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 47: ARM-32 Course 1 (Part 7 - Program Counter)</h2>
<p dir="auto">This tutorial will discuss the program counter.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-7-program-counter-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-48-arm-32-course-1-part-8---cpsr" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-48-arm-32-course-1-part-8---cpsr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 48: ARM-32 Course 1 (Part 8 - CPSR)</h2>
<p dir="auto">This tutorial will discuss the CPSR.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-8-cpsr-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-49-arm-32-course-1-part-9---link-register" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-49-arm-32-course-1-part-9---link-register"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 49: ARM-32 Course 1 (Part 9 - Link Register)</h2>
<p dir="auto">This tutorial will discuss the Link Register.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-9-link-register-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-50-arm-32-course-1-part-10---stack-pointer" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-50-arm-32-course-1-part-10---stack-pointer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 50: ARM-32 Course 1 (Part 10 - Stack Pointer)</h2>
<p dir="auto">This tutorial will discuss the Stack Pointer.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-10-stack-pointer-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-51-arm-32-course-1-part-11---arm-firmware-boot-procedures" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-51-arm-32-course-1-part-11---arm-firmware-boot-procedures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 51: ARM-32 Course 1 (Part 11 - ARM Firmware Boot Procedures)</h2>
<p dir="auto">This tutorial will discuss ARM Firmware Boot Procedures.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-11-firmware-boot-procedures-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-52-arm-32-course-1-part-12---von-neumann-architecture" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-52-arm-32-course-1-part-12---von-neumann-architecture"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 52: ARM-32 Course 1 (Part 12 - Von Neumann Architecture)</h2>
<p dir="auto">This tutorial will discuss Von Neumann Architecture.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-12-von-neumann-architecture-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-53-arm-32-course-1-part-13---instruction-pipeline" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-53-arm-32-course-1-part-13---instruction-pipeline"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 53: ARM-32 Course 1 (Part 13 - Instruction Pipeline)</h2>
<p dir="auto">This tutorial will discuss the instruction pipeline.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-13-instruction-pipeline-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-54-arm-32-course-1-part-14---add" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-54-arm-32-course-1-part-14---add"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 54: ARM-32 Course 1 (Part 14 - ADD)</h2>
<p dir="auto">This tutorial will discuss the add instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-14-add-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-55-arm-32-course-1-part-15---debugging-add" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-55-arm-32-course-1-part-15---debugging-add"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 55: ARM-32 Course 1 (Part 15 - Debugging ADD)</h2>
<p dir="auto">This tutorial will discuss debugging the add instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-15-debugging-add-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-56-arm-32-course-1-part-16---hacking-add" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-56-arm-32-course-1-part-16---hacking-add"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 56: ARM-32 Course 1 (Part 16 - Hacking ADD)</h2>
<p dir="auto">This tutorial will discuss hacking the add instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-16-hacking-add-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-57-arm-32-course-1-part-17---adds" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-57-arm-32-course-1-part-17---adds"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 57: ARM-32 Course 1 (Part 17 - ADDS)</h2>
<p dir="auto">This tutorial will discuss the adds instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-17-adds-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-58-arm-32-course-1-part-18--debugging-adds" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-58-arm-32-course-1-part-18--debugging-adds"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 58: ARM-32 Course 1 (Part 18 – Debugging ADDS)</h2>
<p dir="auto">This tutorial will discuss debugging the adds instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-18-debugging-adds-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-59-arm-32-course-1-part-19--hacking-adds" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-59-arm-32-course-1-part-19--hacking-adds"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 59: ARM-32 Course 1 (Part 19 – Hacking ADDS)</h2>
<p dir="auto">This tutorial will discuss hacking the adds instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-19-hacking-adds-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-60-arm-32-course-1-part-20--adc" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-60-arm-32-course-1-part-20--adc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 60: ARM-32 Course 1 (Part 20 – ADC)</h2>
<p dir="auto">This tutorial will discuss the ADC instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-20-adc-kevin-m-thomas" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-61-arm-32-course-1-part-21--debugging-adc" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-61-arm-32-course-1-part-21--debugging-adc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 61: ARM-32 Course 1 (Part 21 – Debugging ADC)</h2>
<p dir="auto">This tutorial will discuss debugging the ADC instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-21-adc-debugging-kevin-m-thomas" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-62-arm-32-course-1-part-22--hacking-adc" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-62-arm-32-course-1-part-22--hacking-adc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 62: ARM-32 Course 1 (Part 22 – Hacking ADC)</h2>
<p dir="auto">This tutorial will discuss hacking the ADC instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-22-adc-hacking-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-63-arm-32-course-1-part-23--sub" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-63-arm-32-course-1-part-23--sub"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 63: ARM-32 Course 1 (Part 23 – SUB)</h2>
<p dir="auto">This tutorial will discuss the SUB instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-23-sub-kevin-m-thomas" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-64-arm-32-course-1-part-24--debugging-sub" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-64-arm-32-course-1-part-24--debugging-sub"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 64: ARM-32 Course 1 (Part 24 – Debugging SUB)</h2>
<p dir="auto">This tutorial will discuss debugging the SUB instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-24-debugging-sub-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-65-arm-32-course-1-part-25--hacking-sub" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-65-arm-32-course-1-part-25--hacking-sub"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 65: ARM-32 Course 1 (Part 25 – Hacking SUB)</h2>
<p dir="auto">This tutorial will discuss hacking the SUB instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-assembly-part-25-hacking-sub-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<br>
<h2 tabindex="-1" dir="auto"><a id="user-content-arm-32-course-2" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#arm-32-course-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ARM-32 Course 2</h2>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-66-arm-32-course-2-part-1--the-meaning-of-life-part-2" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-66-arm-32-course-2-part-1--the-meaning-of-life-part-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 66: ARM-32 Course 2 (Part 1 – The Meaning Of Life Part 2)</h2>
<p dir="auto">This tutorial will introduce our ARM-32 Course 2 course.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-1-meaning-life-2-kevin-m-thomas" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-67-arm-32-course-2-part-2--number-systems" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-67-arm-32-course-2-part-2--number-systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 67: ARM-32 Course 2 (Part 2 – Number Systems)</h2>
<p dir="auto">This tutorial will discuss number systems.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-2-number-systems-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-68-arm-32-course-2-part-3--binary-addition" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-68-arm-32-course-2-part-3--binary-addition"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 68: ARM-32 Course 2 (Part 3 – Binary Addition)</h2>
<p dir="auto">This tutorial will discuss binary addition.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-3-binary-addition-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-69-arm-32-course-2-part-4--binary-subtraction" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-69-arm-32-course-2-part-4--binary-subtraction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 69: ARM-32 Course 2 (Part 4 – Binary Subtraction)</h2>
<p dir="auto">This tutorial will discuss binary subtraction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-4-binary-subtraction-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-70-arm-32-course-2-part-5--word-lengths" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-70-arm-32-course-2-part-5--word-lengths"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 70: ARM-32 Course 2 (Part 5 – Word Lengths)</h2>
<p dir="auto">This tutorial will discuss word lengths.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-5-word-lengths-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-71-arm-32-course-2-part-6--registers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-71-arm-32-course-2-part-6--registers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 71: ARM-32 Course 2 (Part 6 – Registers)</h2>
<p dir="auto">This tutorial will discuss registers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-6-registers-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-72-arm-32-course-2-part-7--program-counter" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-72-arm-32-course-2-part-7--program-counter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 72: ARM-32 Course 2 (Part 7 – Program Counter)</h2>
<p dir="auto">This tutorial will discuss program counter.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-7-program-counter-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-73-arm-32-course-2-part-8---cpsr" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-73-arm-32-course-2-part-8---cpsr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 73: ARM-32 Course 2 (Part 8 - CPSR)</h2>
<p dir="auto">This tutorial will discuss the CPSR.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-8-cpsr-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-74-arm-32-course-2-part-9---link-register" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-74-arm-32-course-2-part-9---link-register"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 74: ARM-32 Course 2 (Part 9 - Link Register)</h2>
<p dir="auto">This tutorial will discuss the link register.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-9-link-register-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-75-arm-32-course-2-part-10---stack-pointer" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-75-arm-32-course-2-part-10---stack-pointer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 75: ARM-32 Course 2 (Part 10 - Stack Pointer)</h2>
<p dir="auto">This tutorial will discuss the stack pointer.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-10-stack-pointer-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-76-arm-32-course-2-part-11---firmware-boot-procedures" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-76-arm-32-course-2-part-11---firmware-boot-procedures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 76: ARM-32 Course 2 (Part 11 - Firmware Boot Procedures)</h2>
<p dir="auto">This tutorial will discuss the firmware boot procedures.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-11-firmware-boot-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-77-arm-32-course-2-part-12---von-neumann-architecture" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-77-arm-32-course-2-part-12---von-neumann-architecture"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 77: ARM-32 Course 2 (Part 12 - Von Neumann Architecture)</h2>
<p dir="auto">This tutorial will discuss the Von Neumann Architecture.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-12-von-neumann-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-78-arm-32-course-2-part-13---instruction-pipeline" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-78-arm-32-course-2-part-13---instruction-pipeline"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 78: ARM-32 Course 2 (Part 13 - Instruction Pipeline)</h2>
<p dir="auto">This tutorial will discuss the instruction pipeline.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-13-instruction-pipeline-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-79-arm-32-course-2-part-14---hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-79-arm-32-course-2-part-14---hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 79: ARM-32 Course 2 (Part 14 - Hello World)</h2>
<p dir="auto">This tutorial will discuss the basics of a hello world program in ARM 32-bit.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-14-hello-world-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-80-arm-32-course-2-part-15---debugging-hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-80-arm-32-course-2-part-15---debugging-hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 80: ARM-32 Course 2 (Part 15 - Debugging Hello World)</h2>
<p dir="auto">This tutorial will discuss debugging hello world.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-15-debugging-hello-world-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-81-arm-32-course-2-part-16---hacking-hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-81-arm-32-course-2-part-16---hacking-hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 81: ARM-32 Course 2 (Part 16 - Hacking Hello World)</h2>
<p dir="auto">This tutorial will discuss hacking hello world.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-16-hacking-hello-world-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-82-arm-32-course-2-part-17---constants" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-82-arm-32-course-2-part-17---constants"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 82: ARM-32 Course 2 (Part 17 - Constants)</h2>
<p dir="auto">This tutorial will discuss constants.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-17-constants-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-83-arm-32-course-2-part-18--debugging-constants" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-83-arm-32-course-2-part-18--debugging-constants"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 83: ARM-32 Course 2 (Part 18 – Debugging Constants)</h2>
<p dir="auto">This tutorial will discuss debugging constants.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-18-debugging-constants-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-84-arm-32-course-2-part-19--hacking-constants" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-84-arm-32-course-2-part-19--hacking-constants"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 84: ARM-32 Course 2 (Part 19 – Hacking Constants)</h2>
<p dir="auto">This tutorial will discuss hacking constants.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-19-hacking-constants-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-85-arm-32-course-2-part-20--character-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-85-arm-32-course-2-part-20--character-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 85: ARM-32 Course 2 (Part 20 – Character Variables)</h2>
<p dir="auto">This tutorial will discuss character variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-20-character-variables-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-86-arm-32-course-2-part-21--debugging-character-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-86-arm-32-course-2-part-21--debugging-character-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 86: ARM-32 Course 2 (Part 21 – Debugging Character Variables)</h2>
<p dir="auto">This tutorial will discuss debugging character variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-21-debugging-character-variables-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-87-arm-32-course-2-part-22--hacking-character-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-87-arm-32-course-2-part-22--hacking-character-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 87: ARM-32 Course 2 (Part 22 – Hacking Character Variables)</h2>
<p dir="auto">This tutorial will discuss hacking character variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-22-hacking-character-variables-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-88-arm-32-course-2-part-23--boolean-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-88-arm-32-course-2-part-23--boolean-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 88: ARM-32 Course 2 (Part 23 – Boolean Variables)</h2>
<p dir="auto">This tutorial will discuss boolean variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-23-boolean-variables-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-89-arm-32-course-2-part-24--debugging-boolean-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-89-arm-32-course-2-part-24--debugging-boolean-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 89: ARM-32 Course 2 (Part 24 – Debugging Boolean Variables)</h2>
<p dir="auto">This tutorial will discuss debugging boolean variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-24-debugging-boolean-variables-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-90-arm-32-course-2-part-25--hacking-boolean-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-90-arm-32-course-2-part-25--hacking-boolean-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 90: ARM-32 Course 2 (Part 25 – Hacking Boolean Variables)</h2>
<p dir="auto">This tutorial will discuss hacking boolean variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-25-hacking-boolean-variables-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-91-arm-32-course-2-part-26--integer-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-91-arm-32-course-2-part-26--integer-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 91: ARM-32 Course 2 (Part 26 – Integer Variables)</h2>
<p dir="auto">This tutorial will discuss integer variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-26-integer-variables-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-92-arm-32-course-2-part-27--debugging-integer-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-92-arm-32-course-2-part-27--debugging-integer-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 92: ARM-32 Course 2 (Part 27 – Debugging Integer Variables)</h2>
<p dir="auto">This tutorial will discuss debugging integer variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-27-debugging-integer-variables-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-93-arm-32-course-2-part-28--hacking-integer-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-93-arm-32-course-2-part-28--hacking-integer-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 93: ARM-32 Course 2 (Part 28 – Hacking Integer Variables)</h2>
<p dir="auto">This tutorial will discuss hacking integer variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-28-hacking-integer-variables-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-94-arm-32-course-2-part-29--float-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-94-arm-32-course-2-part-29--float-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 94: ARM-32 Course 2 (Part 29 – Float Variables)</h2>
<p dir="auto">This tutorial will discuss float variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-29-float-variables-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-95-arm-32-course-2-part-30--debugging-float-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-95-arm-32-course-2-part-30--debugging-float-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 95: ARM-32 Course 2 (Part 30 – Debugging Float Variables)</h2>
<p dir="auto">This tutorial will discuss debugging float variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-30-debugging-float-variables-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-96-arm-32-course-2-part-31--hacking-float-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-96-arm-32-course-2-part-31--hacking-float-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 96: ARM-32 Course 2 (Part 31 – Hacking Float Variables)</h2>
<p dir="auto">This tutorial will discuss hacking float variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-30-debugging-float-variables-thomas-1/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-97-arm-32-course-2-part-32--double-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-97-arm-32-course-2-part-32--double-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 97: ARM-32 Course 2 (Part 32 – Double Variables)</h2>
<p dir="auto">This tutorial will discuss double variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-32-double-variables-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-98-arm-32-course-2-part-33--debugging-double-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-98-arm-32-course-2-part-33--debugging-double-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 98: ARM-32 Course 2 (Part 33 – Debugging Double Variables)</h2>
<p dir="auto">This tutorial will discuss debugging double variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-33-debugging-double-variables-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-99-arm-32-course-2-part-34--hacking-double-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-99-arm-32-course-2-part-34--hacking-double-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 99: ARM-32 Course 2 (Part 34 – Hacking Double Variables)</h2>
<p dir="auto">This tutorial will discuss hacking double variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-34-hacking-double-variables-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-100-arm-32-course-2-part-35--sizeof-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-100-arm-32-course-2-part-35--sizeof-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 100: ARM-32 Course 2 (Part 35 – SizeOf Operator)</h2>
<p dir="auto">This tutorial will discuss the sizeof operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-35-sizeof-operator-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-101-arm-32-course-2-part-36--debugging-sizeof-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-101-arm-32-course-2-part-36--debugging-sizeof-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 101: ARM-32 Course 2 (Part 36 – Debugging SizeOf Operator)</h2>
<p dir="auto">This tutorial will discuss debugging sizeof operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-36-debugging-sizeof-operator-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-102-arm-32-course-2-part-37--hacking-sizeof-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-102-arm-32-course-2-part-37--hacking-sizeof-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 102: ARM-32 Course 2 (Part 37 – Hacking SizeOf Operator)</h2>
<p dir="auto">This tutorial will discuss hacking sizeof operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-37-hacking-sizeof-operator-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-103-arm-32-course-2-part-38--pre-increment-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-103-arm-32-course-2-part-38--pre-increment-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 103: ARM-32 Course 2 (Part 38 – Pre-Increment Operator)</h2>
<p dir="auto">This tutorial will discuss the pre-increment operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-38-pre-increment-operator-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-104-arm-32-course-2-part-39--debugging-pre-increment-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-104-arm-32-course-2-part-39--debugging-pre-increment-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 104: ARM-32 Course 2 (Part 39 – Debugging Pre-Increment Operator)</h2>
<p dir="auto">This tutorial will discuss debugging pre-increment operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-39-debugging-operator-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-105-arm-32-course-2-part-40--hacking-pre-increment-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-105-arm-32-course-2-part-40--hacking-pre-increment-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 105: ARM-32 Course 2 (Part 40 – Hacking Pre-Increment Operator)</h2>
<p dir="auto">This tutorial will discuss hacking pre-increment operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-40-hacking-pre-increment-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-106-arm-32-course-2-part-41--post-increment-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-106-arm-32-course-2-part-41--post-increment-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 106: ARM-32 Course 2 (Part 41 – Post-Increment Operator)</h2>
<p dir="auto">This tutorial will discuss the post-increment operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-41-post-increment-operator-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-107-arm-32-course-2-part-42--debugging-post-increment-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-107-arm-32-course-2-part-42--debugging-post-increment-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 107: ARM-32 Course 2 (Part 42 – Debugging Post-Increment Operator)</h2>
<p dir="auto">This tutorial will discuss debugging post-increment operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-42-debugging-operator-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-108-arm-32-course-2-part-43--hacking-post-increment-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-108-arm-32-course-2-part-43--hacking-post-increment-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 108: ARM-32 Course 2 (Part 43 – Hacking Post-Increment Operator)</h2>
<p dir="auto">This tutorial will discuss hacking post-increment operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-43-hacking-operator-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-109-arm-32-course-2-part-44--pre-decrement-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-109-arm-32-course-2-part-44--pre-decrement-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 109: ARM-32 Course 2 (Part 44 – Pre-Decrement Operator)</h2>
<p dir="auto">This tutorial will discuss the pre-decrement operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-44-pre-decrement-operator-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-110-arm-32-course-2-part-45--debugging-pre-decrement-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-110-arm-32-course-2-part-45--debugging-pre-decrement-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 110: ARM-32 Course 2 (Part 45 – Debugging Pre-Decrement Operator)</h2>
<p dir="auto">This tutorial will discuss debugging pre-decrement operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-45-debugging-operator-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-111-arm-32-course-2-part-46--hacking-pre-decrement-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-111-arm-32-course-2-part-46--hacking-pre-decrement-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 111: ARM-32 Course 2 (Part 46 – Hacking Pre-Decrement Operator)</h2>
<p dir="auto">This tutorial will discuss hacking pre-decrement operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-46-hacking-pre-decrement-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-112-arm-32-course-2-part-47--post-decrement-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-112-arm-32-course-2-part-47--post-decrement-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 112: ARM-32 Course 2 (Part 47 – Post-Decrement Operator)</h2>
<p dir="auto">This tutorial will discuss post-decrement operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-47-post-decrement-operator-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-113-arm-32-course-2-part-48--debugging-post-decrement-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-113-arm-32-course-2-part-48--debugging-post-decrement-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 113: ARM-32 Course 2 (Part 48 – Debugging Post-Decrement Operator)</h2>
<p dir="auto">This tutorial will discuss debugging post-decrement operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-48-debugging-operator-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-114-arm-32-course-2-part-49--hacking-post-decrement-operator" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-114-arm-32-course-2-part-49--hacking-post-decrement-operator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 114: ARM-32 Course 2 (Part 49 – Hacking Post-Decrement Operator)</h2>
<p dir="auto">This tutorial will discuss hacking post-decrement operator.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/arm-reverse-engineering-part-49-hacking-operator-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<br>
<h2 tabindex="-1" dir="auto"><a id="user-content-arm-32-project-course" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#arm-32-project-course"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ARM-32 Project Course</h2>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-115-arm-32-project-part-1--hacking-hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-115-arm-32-project-part-1--hacking-hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 115: ARM-32 Project (Part 1 – Hacking Hello World)</h2>
<p dir="auto">ARM 32-bit Raspberry Pi Hacking Hello World example in Kali Linux.
-&gt; Click <a href="https://github.com/mytechnotalent/0x01-ARM-32-Hacking-Hello-World/">HERE</a> to read the project on GitHub.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-116-arm-32-project-part-2--hacking-int" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-116-arm-32-project-part-2--hacking-int"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 116: ARM-32 Project (Part 2 – Hacking Int)</h2>
<p dir="auto">ARM 32-bit Raspberry Pi Hacking Int example in Kali Linux.
-&gt; Click <a href="https://github.com/mytechnotalent/0x02-ARM-32-Hacking-Int/">HERE</a> to read the project on GitHub.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-117-arm-32-project-part-3--hacking-float" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-117-arm-32-project-part-3--hacking-float"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 117: ARM-32 Project (Part 3 – Hacking Float)</h2>
<p dir="auto">ARM 32-bit Raspberry Pi Hacking Float example in Kali Linux.
-&gt; Click <a href="https://github.com/mytechnotalent/0x03-ARM-32-Hacking-Float/">HERE</a> to read the project on GitHub.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-118-arm-32-project-part-4--hacking-double" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-118-arm-32-project-part-4--hacking-double"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 118: ARM-32 Project (Part 4 – Hacking Double)</h2>
<p dir="auto">ARM 32-bit Raspberry Pi Hacking Double example in Kali Linux.
-&gt; Click <a href="https://github.com/mytechnotalent/0x04-ARM-32-Hacking-Double/">HERE</a> to read the project on GitHub.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-119-arm-32-project-part-5--hacking-char" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-119-arm-32-project-part-5--hacking-char"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 119: ARM-32 Project (Part 5 – Hacking Char)</h2>
<p dir="auto">ARM 32-bit Raspberry Pi Hacking Char example in Kali Linux.
-&gt; Click <a href="https://github.com/mytechnotalent/0x05-ARM-32-Hacking_Char/">HERE</a> to read the project on GitHub.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-120-arm-32-project-part-6--hacking-char-pointer" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-120-arm-32-project-part-6--hacking-char-pointer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 120: ARM-32 Project (Part 6 – Hacking Char Pointer)</h2>
<p dir="auto">ARM 32-bit Raspberry Pi Char Pointer example in Kali Linux.
-&gt; Click <a href="https://github.com/mytechnotalent/0x06-ARM-32-Hacking-Char-Pointer/">HERE</a> to read the project on GitHub.</p>
<br>
<h2 tabindex="-1" dir="auto"><a id="user-content-x64-course" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#x64-course"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>x64 Course</h2>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-121-x64-course-part-1--the-cyber-revolution" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-121-x64-course-part-1--the-cyber-revolution"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 121: x64 Course (Part 1 – The Cyber Revolution)</h2>
<p dir="auto">This tutorial will discuss the cyber revolution.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-1-cyber-revolution-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-122-x64-course-part-2---transistors" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-122-x64-course-part-2---transistors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 122: x64 Course (Part 2 - Transistors)</h2>
<p dir="auto">This tutorial will discuss transistors.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-2-transistors-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-123-x64-course-part-3---logic-gates" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-123-x64-course-part-3---logic-gates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 123: x64 Course (Part 3 - Logic Gates)</h2>
<p dir="auto">This tutorial will discuss logic gates.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-3-logic-gates-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-124-x64-course-part-4---number-systems" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-124-x64-course-part-4---number-systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 124: x64 Course (Part 4 - Number Systems)</h2>
<p dir="auto">This tutorial will discuss number systems.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-4-number-systems-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-125-x64-course-part-5---binary-addition" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-125-x64-course-part-5---binary-addition"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 125: x64 Course (Part 5 - Binary Addition)</h2>
<p dir="auto">This tutorial will discuss binary addition.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-5-binary-addition-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-126-x64-course-part-6---binary-subtraction" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-126-x64-course-part-6---binary-subtraction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 126: x64 Course (Part 6 - Binary Subtraction)</h2>
<p dir="auto">This tutorial will discuss binary subtraction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-6-binary-subtraction-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-127-x64-course-part-7---word-lengths" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-127-x64-course-part-7---word-lengths"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 127: x64 Course (Part 7 - Word Lengths)</h2>
<p dir="auto">This tutorial will discuss word lengths.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-7-word-lengths-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-128-x64-course-part-8---general-architecture" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-128-x64-course-part-8---general-architecture"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 128: x64 Course (Part 8 - General Architecture)</h2>
<p dir="auto">This tutorial will discuss the general architecture.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-8-general-architecture-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-129-x64-course-part-9---calling-conventions" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-129-x64-course-part-9---calling-conventions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 129: x64 Course (Part 9 - Calling Conventions)</h2>
<p dir="auto">This tutorial will discuss calling conventions.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-9-calling-conventions-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-130-x64-course-part-10---boolean-instructions" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-130-x64-course-part-10---boolean-instructions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 130: x64 Course (Part 10 - Boolean Instructions)</h2>
<p dir="auto">This tutorial will discuss boolean instructions.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-10-boolean-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-131-x64-course-part-11---pointers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-131-x64-course-part-11---pointers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 131: x64 Course (Part 11 - Pointers)</h2>
<p dir="auto">This tutorial will discuss pointers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-11-pointers-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-132-x64-course-part-12---load-effective-address" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-132-x64-course-part-12---load-effective-address"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 132: x64 Course (Part 12 - Load Effective Address)</h2>
<p dir="auto">This tutorial will discuss load effective address.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-12-load-effective-address-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-133-x64-course-part-13---the-data-segment" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-133-x64-course-part-13---the-data-segment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 133: x64 Course (Part 13 - The Data Segment)</h2>
<p dir="auto">This tutorial will discuss the data segment.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-13-data-segment-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-134-x64-course-part-14---shl-instruction" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-134-x64-course-part-14---shl-instruction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 134: x64 Course (Part 14 - SHL Instruction)</h2>
<p dir="auto">This tutorial will discuss the shl instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-14-shl-instruction-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-135-x64-course-part-15---shr-instruction" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-135-x64-course-part-15---shr-instruction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 135: x64 Course (Part 15 - SHR Instruction)</h2>
<p dir="auto">This tutorial will discuss the shr instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-15-shr-instruction-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-136-x64-course-part-16---rol-instruction" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-136-x64-course-part-16---rol-instruction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 136: x64 Course (Part 16 - ROL Instruction)</h2>
<p dir="auto">This tutorial will discuss rol instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-16-rol-instruction-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-137-x64-course-part-17---ror-instruction" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-137-x64-course-part-17---ror-instruction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 137: x64 Course (Part 17 - ROR Instruction)</h2>
<p dir="auto">This tutorial will discuss the ror instruction.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-17-ror-instruction-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-138-x64-course-part-18---boot-sector-basics-part-1" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-138-x64-course-part-18---boot-sector-basics-part-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 138: x64 Course (Part 18 - Boot Sector Basics [Part 1])</h2>
<p dir="auto">This tutorial will discuss boot sector basics.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-18-boot-sector-basics-1-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-139-x64-course-part-19---boot-sector-basics-part-2" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-139-x64-course-part-19---boot-sector-basics-part-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 139: x64 Course (Part 19 - Boot Sector Basics [Part 2])</h2>
<p dir="auto">This tutorial will discuss more boot sector basics.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-18-boot-sector-basics-2-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-140-x64-course-part-20---boot-sector-basics-part-3" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-140-x64-course-part-20---boot-sector-basics-part-3"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 140: x64 Course (Part 20 - Boot Sector Basics [Part 3])</h2>
<p dir="auto">This tutorial will discuss more boot sector basics.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-20-boot-sector-basics-3-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-141-x64-course-part-21---boot-sector-basics-part-4" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-141-x64-course-part-21---boot-sector-basics-part-4"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 141: x64 Course (Part 21 - Boot Sector Basics [Part 4])</h2>
<p dir="auto">This tutorial will discuss more boot sector basics.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-21-boot-sector-basics-4-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-142-x64-course-part-22---boot-sector-basics-part-5" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-142-x64-course-part-22---boot-sector-basics-part-5"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 142: x64 Course (Part 22 - Boot Sector Basics [Part 5])</h2>
<p dir="auto">This tutorial will discuss more boot sector basics.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-22-boot-sector-basics-5-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-143-x64-course-part-23---boot-sector-basics-part-6" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-143-x64-course-part-23---boot-sector-basics-part-6"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 143: x64 Course (Part 23 - Boot Sector Basics [Part 6])</h2>
<p dir="auto">This tutorial will discuss more boot sector basics.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-23-boot-sector-basics-6-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-144-x64-course-part-24---boot-sector-basics-part-7" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-144-x64-course-part-24---boot-sector-basics-part-7"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 144: x64 Course (Part 24 - Boot Sector Basics [Part 7])</h2>
<p dir="auto">This tutorial will discuss more boot sector basics.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-24-boot-sector-basics-7-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-145-x64-course-part-25---boot-sector-basics-part-8" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-145-x64-course-part-25---boot-sector-basics-part-8"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 145: x64 Course (Part 25 - Boot Sector Basics [Part 8])</h2>
<p dir="auto">This tutorial will discuss more boot sector basics.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-25-boot-sector-basics-8-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-146-x64-course-part-26---boot-sector-basics-part-9" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-146-x64-course-part-26---boot-sector-basics-part-9"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 146: x64 Course (Part 26 - Boot Sector Basics [Part 9])</h2>
<p dir="auto">This tutorial will discuss more boot sector basics.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-26-boot-sector-basics-9-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-147-x64-course-part-27---x64-assembly-part-1" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-147-x64-course-part-27---x64-assembly-part-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 147: x64 Course (Part 27 - x64 Assembly [Part 1])</h2>
<p dir="auto">This tutorial will discuss x64 assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-27-assembly-1-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-148-x64-course-part-28---x64-assembly-part-2" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-148-x64-course-part-28---x64-assembly-part-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 148: x64 Course (Part 28 - x64 Assembly [Part 2])</h2>
<p dir="auto">This tutorial will discuss more x64 assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-28-assembly-2-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-149-x64-course-part-29---x64-assembly-part-3" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-149-x64-course-part-29---x64-assembly-part-3"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 149: x64 Course (Part 29 - x64 Assembly [Part 3])</h2>
<p dir="auto">This tutorial will discuss more x64 assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-29-assembly-3-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-150-x64-course-part-30---x64-assembly-part-4" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-150-x64-course-part-30---x64-assembly-part-4"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 150: x64 Course (Part 30 - x64 Assembly [Part 4])</h2>
<p dir="auto">This tutorial will discuss more x64 assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-30-assembly-4-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-151-x64-course-part-31---x64-assembly-part-5" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-151-x64-course-part-31---x64-assembly-part-5"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 151: x64 Course (Part 31 - x64 Assembly [Part 5])</h2>
<p dir="auto">This tutorial will discuss more x64 assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-31-assembly-5-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-152-x64-course-part-32---x64-assembly-part-6" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-152-x64-course-part-32---x64-assembly-part-6"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 152: x64 Course (Part 32 - x64 Assembly [Part 6])</h2>
<p dir="auto">This tutorial will discuss more x64 assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-32-assembly-6-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-153-x64-course-part-33---x64-assembly-part-7" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-153-x64-course-part-33---x64-assembly-part-7"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 153: x64 Course (Part 33 - x64 Assembly [Part 7])</h2>
<p dir="auto">This tutorial will discuss more x64 assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-33-assembly-7-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-154-x64-course-part-34---x64-c-1-code-part-1" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-154-x64-course-part-34---x64-c-1-code-part-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 154: x64 Course (Part 34 - x64 C++ 1 Code [Part 1])</h2>
<p dir="auto">This tutorial will discuss c++ code as it relates to 64-bit assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-34-c-1-code-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-155-x64-course-part-35---x64-c-2-debug-part-2" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-155-x64-course-part-35---x64-c-2-debug-part-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 155: x64 Course (Part 35 - x64 C++ 2 Debug [Part 2])</h2>
<p dir="auto">This tutorial will discuss more c++ code as it relates to 64-bit assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-35-c-1-debug-2-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-156-x64-course-part-36---x64-c-3-hacking-part-3" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-156-x64-course-part-36---x64-c-3-hacking-part-3"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 156: x64 Course (Part 36 - x64 C++ 3 Hacking [Part 3])</h2>
<p dir="auto">This tutorial will discuss more c++ code as it relates to 64-bit assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-36-c-1-hacking-3-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-157-x64-course-part-37---x64-c--genesis-of-life" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-157-x64-course-part-37---x64-c--genesis-of-life"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 157: x64 Course (Part 37 - x64 C &amp; Genesis Of Life)</h2>
<p dir="auto">This tutorial will discuss c and how it relates to x64 assembly.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-37-c-genesis-life-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-158-x64-course-part-38---x64-networking-basics" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-158-x64-course-part-38---x64-networking-basics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 158: x64 Course (Part 38 - x64 Networking Basics)</h2>
<p dir="auto">This tutorial will discuss x64 networking basics.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-38-networking-basics-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-159-x64-course-part-39---why-c" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-159-x64-course-part-39---why-c"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 159: x64 Course (Part 39 - Why C?)</h2>
<p dir="auto">This tutorial will discuss the power of the c language.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-39-why-c-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-160-x64-course-part-40---hacking-hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-160-x64-course-part-40---hacking-hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 160: x64 Course (Part 40 - Hacking Hello World!)</h2>
<p dir="auto">This tutorial will discuss hacking hello world.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-40-hacking-hello-world-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-161-x64-course-part-41---hacking-variables" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-161-x64-course-part-41---hacking-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 161: x64 Course (Part 41 - Hacking Variables!)</h2>
<p dir="auto">This tutorial will discuss hacking variables.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-41-hacking-variables-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-162-x64-course-part-42---hacking-branches" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-162-x64-course-part-42---hacking-branches"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 162: x64 Course (Part 42 - Hacking Branches!)</h2>
<p dir="auto">This tutorial will discuss hacking branches.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-42-hacking-branches-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-163-x64-course-part-43---hacking-pointers" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-163-x64-course-part-43---hacking-pointers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 163: x64 Course (Part 43 - Hacking Pointers!)</h2>
<p dir="auto">This tutorial will discuss hacking pointers.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/x64-reverse-engineering-part-43-hacking-pointers-kevin-m-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<br>
<h2 tabindex="-1" dir="auto"><a id="user-content-arm-64-course" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#arm-64-course"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ARM-64 Course</h2>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-164-arm-64-course-part-1---the-meaning-of-life" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-164-arm-64-course-part-1---the-meaning-of-life"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 164: ARM-64 Course (Part 1 - The Meaning Of Life)</h2>
<p dir="auto">In this lesson we will discuss the course concepts and the meaning of life.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-1-hacking-c-arm-64-part-meaning-life-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-165-arm-64-course-part-2---development-setup" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-165-arm-64-course-part-2---development-setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 165: ARM-64 Course (Part 2 - Development Setup)</h2>
<p dir="auto">In this lesson we will discuss how to set up our development in 64-bit ARM with Kali Linux.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-2-hacking-c-arm-64-part-development-setup-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-166-arm-64-course-part-3---hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-166-arm-64-course-part-3---hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 166: ARM-64 Course (Part 3 - "Hello World")</h2>
<p dir="auto">In this lesson we will discuss how to write and compile a simple hello world program in C++.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-2-hacking-c-arm-64-part-hello-world-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-167-arm-64-course-part-4---debugging-hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-167-arm-64-course-part-4---debugging-hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 167: ARM-64 Course (Part 4 - Debugging "Hello World")</h2>
<p dir="auto">In this lesson we will debug our simple hello world program.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-4-hacking-c-arm-64-part-debugging-hello-world-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-168-arm-64-course-part-5---hacking-hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-168-arm-64-course-part-5---hacking-hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 168: ARM-64 Course (Part 5 - Hacking "Hello World")</h2>
<p dir="auto">In this lesson we will hack our simple hello world program.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-5-hacking-c-arm-64-part-hello-world-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-169-arm-64-course-part-6---basic-io" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-169-arm-64-course-part-6---basic-io"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 169: ARM-64 Course (Part 6 - Basic I/O)</h2>
<p dir="auto">In this lesson we will discuss how to write and compile a simple basicio program in C++ and discuss basic input validation.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-6-hacking-c-arm-64-part-basic-io-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-170-arm-64-course-part-7---debugging-basic-io" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-170-arm-64-course-part-7---debugging-basic-io"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 170: ARM-64 Course (Part 7 - Debugging Basic I/O)</h2>
<p dir="auto">In this lesson we will discuss how to debug a simple basicio program in C++ and discuss basic input validation.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-7-hacking-c-arm-64-part-debugging-basic-io-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-171-arm-64-course-part-8---hacking-basic-io" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-171-arm-64-course-part-8---hacking-basic-io"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 171: ARM-64 Course (Part 8 - Hacking Basic I/O)</h2>
<p dir="auto">In this lesson we will discuss how to hack a simple basicio program in C++ and discuss basic input validation.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-8-hacking-c-arm-64-part-basic-io-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-172-arm-64-course-part-9---character-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-172-arm-64-course-part-9---character-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 172: ARM-64 Course (Part 9 - Character Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss the char primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-9-hacking-c-arm-64-part-character-primitive-datatype-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-173-arm-64-course-part-10---debugging-character-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-173-arm-64-course-part-10---debugging-character-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 173: ARM-64 Course (Part 10 - Debugging Character Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss debugging the char primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-10-hacking-c-arm-64-part-debugging-character-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-174-arm-64-course-part-11---hacking-character-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-174-arm-64-course-part-11---hacking-character-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 174: ARM-64 Course (Part 11 - Hacking Character Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss hacking the char primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/lesson-11-hacking-c-arm-64-part-character-primitive-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-175-arm-64-course-part-12---boolean-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-175-arm-64-course-part-12---boolean-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 175: ARM-64 Course (Part 12 - Boolean Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss the boolean primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/hacking-c-arm-64-part-12-boolean-primitive-datatype-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-176-arm-64-course-part-13---debugging-boolean-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-176-arm-64-course-part-13---debugging-boolean-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 176: ARM-64 Course (Part 13 - Debugging Boolean Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss debugging the boolean primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/hacking-c-arm-64-part-13-debugging-boolean-primitive-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-177-arm-64-course-part-14---hacking-boolean-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-177-arm-64-course-part-14---hacking-boolean-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 177: ARM-64 Course (Part 14 - Hacking Boolean Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss hacking the boolean primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/hacking-c-arm-64-part-14-boolean-primitive-datatype-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-178-arm-64-course-part-15---float-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-178-arm-64-course-part-15---float-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 178: ARM-64 Course (Part 15 - Float Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss the float primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/hacking-c-arm-64-part-15-float-primitive-datatype-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-179-arm-64-course-part-16---debugging-float-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-179-arm-64-course-part-16---debugging-float-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 179: ARM-64 Course (Part 16 - Debugging Float Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss debugging the float primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/hacking-c-arm-64-part-16-debugging-float-primitive-datatype-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-180-arm-64-course-part-17---hacking-float-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-180-arm-64-course-part-17---hacking-float-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 180: ARM-64 Course (Part 17 - Hacking Float Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss hacking the float primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/hacking-c-arm-64-part-17-float-primitive-datatype-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-181-arm-64-course-part-18---double-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-181-arm-64-course-part-18---double-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 181: ARM-64 Course (Part 18 - Double Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss the double primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/hacking-c-arm-64-part-18-double-primitive-datatype-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-182-arm-64-course-part-19---debugging-double-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-182-arm-64-course-part-19---debugging-double-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 182: ARM-64 Course (Part 19 - Debugging Double Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss debugging the double primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/hacking-c-arm-64-part-19-debugging-double-primitive-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-183-arm-64-course-part-20---hacking-double-primitive-datatype" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-183-arm-64-course-part-20---hacking-double-primitive-datatype"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 183: ARM-64 Course (Part 20 - Hacking Double Primitive Datatype)</h2>
<p dir="auto">In this lesson we will discuss hacking the double primitive datatype.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/hacking-c-arm-64-part-20-double-primitive-datatype-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<br>
<h2 tabindex="-1" dir="auto"><a id="user-content-pico-hacking-course" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#pico-hacking-course"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Pico Hacking Course</h2>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-184-pico-hacking-course-part-1---the-why-the-how" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-184-pico-hacking-course-part-1---the-why-the-how"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 184: Pico Hacking Course (Part 1 - The Why, The How...)</h2>
<p dir="auto">In this lesson we will discuss the basic setup of the development environment for the Raspberry Pi Pico.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-1-why-how-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-185-pico-hacking-course-part-2---hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-185-pico-hacking-course-part-2---hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 185: Pico Hacking Course (Part 2 - Hello World)</h2>
<p dir="auto">In this lesson we will discuss the basic Hello World program.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-2-hello-world-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-186-pico-hacking-course-part-3---debugging-hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-186-pico-hacking-course-part-3---debugging-hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 186: Pico Hacking Course (Part 3 - Debugging Hello World)</h2>
<p dir="auto">In this lesson we will discuss debugging the basic Hello World program.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-3-debugging-hello-world-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-187-pico-hacking-course-part-4---hacking-hello-world" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-187-pico-hacking-course-part-4---hacking-hello-world"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 187: Pico Hacking Course (Part 4 - Hacking Hello World)</h2>
<p dir="auto">In this lesson we will discuss hacking the basic Hello World program.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-4-hello-world-kevin-thomas" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-188-pico-hacking-course-part-5---char" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-188-pico-hacking-course-part-5---char"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 188: Pico Hacking Course (Part 5 - char)</h2>
<p dir="auto">In this lesson we will discuss the char data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-4-char-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-189-pico-hacking-course-part-6---debugging-char" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-189-pico-hacking-course-part-6---debugging-char"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 189: Pico Hacking Course (Part 6 - Debugging char)</h2>
<p dir="auto">In this lesson we will discuss debugging the char data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-6-debugging-char-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-190-pico-hacking-course-part-7---hacking-char" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-190-pico-hacking-course-part-7---hacking-char"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 190: Pico Hacking Course (Part 7 - Hacking char)</h2>
<p dir="auto">In this lesson we will discuss hacking the char data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-7-char-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-191-pico-hacking-course-part-8---int" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-191-pico-hacking-course-part-8---int"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 191: Pico Hacking Course (Part 8 - int)</h2>
<p dir="auto">In this lesson we will discuss the int data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-8-int-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-192-pico-hacking-course-part-9---debugging-int" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-192-pico-hacking-course-part-9---debugging-int"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 192: Pico Hacking Course (Part 9 - Debugging int)</h2>
<p dir="auto">In this lesson we will discuss debugging the int data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-9-debugging-int-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-193-pico-hacking-course-part-10---hacking-int" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-193-pico-hacking-course-part-10---hacking-int"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 193: Pico Hacking Course (Part 10 - Hacking int)</h2>
<p dir="auto">In this lesson we will discuss hacking the int data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-10-int-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-194-pico-hacking-course-part-11---float" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-194-pico-hacking-course-part-11---float"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 194: Pico Hacking Course (Part 11 - float)</h2>
<p dir="auto">In this lesson we will discuss the float data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-11-float-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-195-pico-hacking-course-part-12---debugging-float" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-195-pico-hacking-course-part-12---debugging-float"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 195: Pico Hacking Course (Part 12 - Debugging float)</h2>
<p dir="auto">In this lesson we will discuss debugging the float data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-12-debugging-float-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-196-pico-hacking-course-part-13---hacking-float" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-196-pico-hacking-course-part-13---hacking-float"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 196: Pico Hacking Course (Part 13 - Hacking float)</h2>
<p dir="auto">In this lesson we will discuss hacking the float data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-13-float-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-197-pico-hacking-course-part-14---double" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-197-pico-hacking-course-part-14---double"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 197: Pico Hacking Course (Part 14 - double)</h2>
<p dir="auto">In this lesson we will discuss the double data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-14-double-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-198-pico-hacking-course-part-15---debugging-double" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-198-pico-hacking-course-part-15---debugging-double"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 198: Pico Hacking Course (Part 15 - Debugging double)</h2>
<p dir="auto">In this lesson we will discuss debugging the double data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-15-debugging-double-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-199-pico-hacking-course-part-16---hacking-double" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-199-pico-hacking-course-part-16---hacking-double"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 199: Pico Hacking Course (Part 16 - Hacking double)</h2>
<p dir="auto">In this lesson we will discuss hacking the double data type.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-16-double-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-200-pico-hacking-course-part-17---absolute-power-corrupts-absolutely-the-tragic-tale-of-input" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-200-pico-hacking-course-part-17---absolute-power-corrupts-absolutely-the-tragic-tale-of-input"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 200: Pico Hacking Course (Part 17 - "ABSOLUTE POWER CORRUPTS ABSOLUTELY!", The Tragic Tale Of Input...)</h2>
<p dir="auto">In this lesson we will discuss the concept of proper input handling.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-17-absolute-power-corrupts-tragic-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-201-pico-hacking-course-part-18---for-800-years-have-i-trained-jedi-the-force-that-is-input" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-201-pico-hacking-course-part-18---for-800-years-have-i-trained-jedi-the-force-that-is-input"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 201: Pico Hacking Course (Part 18 - "FOR 800 YEARS HAVE I TRAINED JEDI!", The FORCE That IS Input...)</h2>
<p dir="auto">In this lesson we will discuss the importance of proper input handling in addition to breaking down our custom input function.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-18-800-years-have-i-trained-jedi-force-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-202-pico-hacking-course-part-19---input" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-202-pico-hacking-course-part-19---input"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 202: Pico Hacking Course (Part 19 - Input)</h2>
<p dir="auto">In this lesson we will discuss creating an effective input architecture.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-19-input-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>
<h2 tabindex="-1" dir="auto"><a id="user-content-lesson-203-pico-hacking-course-part-20---debugging-input" class="anchor" aria-hidden="true" href="https://github.com/mytechnotalent/Reverse-Engineering#lesson-203-pico-hacking-course-part-20---debugging-input"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lesson 203: Pico Hacking Course (Part 20 - Debugging Input)</h2>
<p dir="auto">In this lesson we will discuss debugging input.</p>
<p dir="auto">-&gt; Click <a href="https://www.linkedin.com/pulse/pico-hacking-part-20-debugging-input-kevin-thomas/" rel="nofollow">HERE</a> to read the article on LinkedIn.</p>